using System;
…
namespace Ex3_11
{
    class Shape
    {
        protected double width;
        protected double height;
        public Shape()
        { width = height = 0; }
        public Shape(double x)
        { width = height = x; }
        public Shape(double w, double h)
        {
            width = w;
            height = h;
        }
        public virtual double area()            // 基类中用virtual修饰符声明一个虚方法
        { return width * height; }
    }
    class Triangle : Shape                    // 三角形
    {
        public Triangle(double x, double y): base(x, y){ }
        public override double area()          // 派生类中用override修饰符覆盖基类虚方法
        {
            return width * height / 2;
        }
    }
    class Trapezia : Shape                    // 梯形
    {
        double width2;
        public Trapezia(double w1, double w2, double h): base(w1, h)
        {
            width2 = w2;
        }
        public override double area()          // 派生类中用override修饰符覆盖基类虚方法
        {
            return (width + width2) * height / 2;
        }
    }
    class Test
    {
        static void Main(string[] args)
        {
			…	///此处代码同【例3.9】，在此省略
        }
    }
}
